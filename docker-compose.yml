version: "3.5"

services:
    blackfire:
        container_name: "blackfire"
        image: "blackfire/blackfire"
        environment:
            - "BLACKFIRE_SERVER_ID"
            - "BLACKFIRE_SERVER_TOKEN"
        networks:
            - "vanilla_network"

    database:
        build:
            context: "./images/perconadb"
        container_name: "database"
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        networks:
            - "vanilla_network"
        ports:
            - "3306:3306"
        volumes:
            - "./logs/perconadb:/var/log/mysql"
            - "./resources/etc/mysql/conf.d/:/etc/mysql/conf.d/"
            - "datastorage:/var/lib/mysql"

    nginx:
        build:
            context: "./images/nginx"
        container_name: "nginx"
        depends_on:
            - "php-fpm"
        networks:
            vanilla_network:
                aliases: # Allows (sso|dev).vanilla.localhost to be resolved internally from php-fpm
                    - "sso.vanilla.localhost"
                    - "dev.vanilla.localhost"
                    - "vanilla.test"
        ports:
            - "80:80"
            - "8080:8080"
            - "443:443"
        volumes:
            - "shared:/shared" # allow to use the php-fpm socket
            - "./logs/nginx:/var/log/nginx"
            - "./resources/certificates:/certificates"
            - "./resources/etc/nginx/conf.d:/etc/nginx/conf.d"
            - "./resources/etc/nginx/sites-available:/etc/nginx/sites-available"
            - "./resources/etc/nginx/sites-enabled:/etc/nginx/sites-enabled"
            - "../:/srv/vanilla-repositories"

    # Don't forget to update docker-compose.unit-test.yml
    php-fpm:
        build:
            context: "./images/php-fpm"
        container_name: "php-fpm"
        environment:
            - "BLACKFIRE_CLIENT_ID"
            - "BLACKFIRE_CLIENT_TOKEN"
            - "PHP_INI_SCAN_DIR=:/usr/local/etc/php/custom.conf.d" # Allow users to override configs
            - "TEST_BASEURL"
            - "TEST_DB_HOST"
            - "TEST_DB_NAME"
            - "TEST_DB_USER"
            - "TEST_DB_PASSWORD"
        networks:
            - "vanilla_network"
        volumes:
            - "shared:/shared" # expose php-fpm socket
            - "./logs/php-fpm:/var/log/php-fpm"
            - "./resources/certificates:/usr/local/share/ca-certificates" # Mount extra certificates
            - "./resources/sphinx:/sphinx" # expose sphinx API. We have to do this here because we need to be enable to update the plugin before we can start the container.
            - "./resources/usr/local/etc/php/conf.d:/usr/local/etc/php/custom.conf.d"
            - "../:/srv/vanilla-repositories"
        depends_on:
            - "database"

volumes:
    datastorage:
        # Created by our setup script.
        external: true
    shared:

networks:
    vanilla_network:
        driver: "bridge"
        name: "vanilla_network"
